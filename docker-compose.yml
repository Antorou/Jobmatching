services:
  mongodb:
    image: mongo:latest
    container_name: job_matching-mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: job_matching-backend
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: ${MONGO_URI}
      PORT: ${PORT}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      OLLAMA_HOST: ${OLLAMA_HOST}
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npm install && node src/db/migrations.js && npm start"

  frontend:
    build: ./frontend
    container_name: job_matching-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
      REACT_APP_CLERK_PUBLISHABLE_KEY: ${REACT_APP_CLERK_PUBLISHABLE_KEY}
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules 

volumes:
  mongodb_data: